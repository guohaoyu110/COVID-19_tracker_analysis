import { Executor } from './src/executor';
import { Request } from './src/request';
import Configuration, { ConfigurationOptions, CrawlCallbacks, SuccessCallback, FailureCallback, FinishedCallback } from './src/configuration';
import State from './src/state';
export default class Crawler {
    state: State;
    configuration: Configuration;
    workExecutor: Executor;
    constructor();
    createExecutor(): Executor;
    createRequest(referer: string, url: string): Request;
    configure(options: ConfigurationOptions): Crawler;
    crawl(urlOrOptions: CrawlCallbacks & {
        url: string;
    }, onSuccess?: SuccessCallback, onFailure?: FailureCallback, onAllFinished?: FinishedCallback): Crawler;
    forgetCrawled(): void;
    crawlUrl(url: string, referer: string, depth: number): void;
    crawlUrls(urls: string[], referer: string, depth: number): void;
}
