export interface UrlCrawlingBehavior {
    ignoreRelative?: boolean;
    shouldCrawl: (link: string) => boolean;
}
export interface Decodable {
    toString(encoding: string): string;
}
export interface HttpResponse {
    headers: {
        [headerName: string]: string;
    };
    body: Decodable;
    statusCode: number;
    request: {
        uri: {
            href: string;
        };
    };
}
export default class Response {
    response: HttpResponse;
    constructor(response: HttpResponse);
    isTextHtml(): boolean;
    decode(encoded: Decodable, encoding: string): string;
    getBody(): string;
    stripComments(str: string): string;
    getBaseUrl(responseUrl: string, body: string): string;
    isUrlProtocolSupported(link: string): boolean;
    getHrefFrom(linkHtml: string): string;
    getAllUrls(responseUrl: string, body: string, behavior: UrlCrawlingBehavior): string[];
}
