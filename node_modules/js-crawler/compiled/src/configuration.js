"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _ = require("underscore");
const DEFAULT_DEPTH = 2;
const DEFAULT_MAX_CONCURRENT_REQUESTS = 10;
const DEFAULT_MAX_REQUESTS_PER_SECOND = 100;
const DEFAULT_USERAGENT = 'crawler/js-crawler';
exports.DEFAULT_OPTIONS = {
    depth: DEFAULT_DEPTH,
    ignoreRelative: false,
    userAgent: DEFAULT_USERAGENT,
    maxConcurrentRequests: DEFAULT_MAX_CONCURRENT_REQUESTS,
    maxRequestsPerSecond: DEFAULT_MAX_REQUESTS_PER_SECOND,
    shouldCrawl: url => true,
    shouldCrawlLinksFrom: url => true,
    success: _.noop,
    failure: _.noop,
    finished: _.noop
};
class Configuration {
    constructor() {
        this.configure({});
    }
    configure(options) {
        this.config = Object.assign({}, exports.DEFAULT_OPTIONS, options);
        this.config.depth = Math.max(this.config.depth, 0);
    }
    get options() {
        return _.pick(this.config, [
            'depth',
            'ignoreRelative',
            'userAgent',
            'maxConcurrentRequests',
            'maxRequestsPerSecond',
            'shouldCrawl',
            'shouldCrawlLinksFrom'
        ]);
    }
    get crawlingBehavior() {
        return _.pick(this.config, [
            'ignoreRelative',
            'shouldCrawl'
        ]);
    }
    get callbacks() {
        return _.pick(this.config, [
            'success',
            'failure',
            'finished'
        ]);
    }
    updateAndReturnUrl(urlOrOptions, success, failure, finished) {
        if (typeof urlOrOptions !== 'string') {
            const options = urlOrOptions;
            this.config = Object.assign({}, this.config, options);
            return urlOrOptions.url;
        }
        else {
            const url = urlOrOptions;
            const optionsUpdate = {
                success: success || _.noop,
                failure: failure || _.noop,
                finished: finished || _.noop
            };
            this.config = Object.assign({}, this.config, optionsUpdate);
            return url;
        }
    }
}
exports.default = Configuration;
//# sourceMappingURL=configuration.js.map