"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const req = require('request');
const _ = require("underscore");
class DefaultRequest {
    constructor(options, httpClient = req) {
        this.options = options;
        this.httpClient = httpClient;
    }
    submit() {
        const { referer, url, userAgent } = this.options;
        const requestOptions = {
            url: url,
            encoding: null,
            rejectUnauthorized: false,
            followRedirect: true,
            followAllRedirects: true,
            headers: {
                'User-Agent': userAgent,
                'Referer': referer
            }
        };
        return new Promise((resolve, reject) => {
            this.httpClient(requestOptions, function (error, response) {
                const visitedUrls = _.map(this._redirect.redirects, (redirect) => redirect.redirectUri);
                //If no redirects, then response.request.uri.href === url, otherwise last url
                const lastVisitedUrl = response.request.uri.href;
                //console.log('lastUrlInRedirectChain = %s', lastUrlInRedirectChain);
                visitedUrls.push(url, lastVisitedUrl);
                if (!error && (response.statusCode === 200)) {
                    resolve({
                        visitedUrls: _.unique(visitedUrls),
                        lastVisitedUrl,
                        response
                    });
                }
                else {
                    reject({
                        error,
                        response
                    });
                }
            });
        });
    }
}
exports.default = DefaultRequest;
//# sourceMappingURL=request.js.map